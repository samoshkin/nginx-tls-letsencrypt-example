version: '2'

services:

  cron:
    build: ./cron
    environment:
      - PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - SSL_GROUP_ID=${SSL_GROUP_ID}
      - RSA_KEY_LENGTH=${RSA_KEY_LENGTH}
      - ECDSA_KEY_LENGTH=${ECDSA_KEY_LENGTH}
      - DOMAINS=${DOMAINS}
      - STAGING=${STAGING}
      - VERBOSE=${VERBOSE}
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock:ro
  
  nginx:
    build: 
      context: ./nginx
      args:
        - SSL_GROUP_GID=1337
    ports:
      - 80:80
      - 443:443
    volumes:
      - ssl:/etc/nginx/ssl
      - acme_challenge_webroot:/var/www/acme_challenge_webroot
    command: ['nginx', '-g', 'daemon off;']
  
  certgen:
    image: asamoshkin/letsencrypt-certgen:v0.1.0
    environment:
      - SSL_GROUP_ID=${SSL_GROUP_ID}
      - RSA_KEY_LENGTH=${RSA_KEY_LENGTH}
      - ECDSA_KEY_LENGTH=${ECDSA_KEY_LENGTH}
      - DOMAINS=${DOMAINS}
      - STAGING=${STAGING}
      - VERBOSE=${VERBOSE}
    command: ['noop']
    volumes:
      - ssl:/var/ssl
      - letsencrypt:/etc/letsencrypt
      - acme:/etc/acme
      - acme_challenge_webroot:/var/acme_challenge_webroot
      
volumes:
  letsencrypt:
  acme:
  ssl:
  acme_challenge_webroot: